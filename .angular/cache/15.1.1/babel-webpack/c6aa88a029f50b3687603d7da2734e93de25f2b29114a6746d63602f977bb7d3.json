{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class SQLService {\n  constructor(http) {\n    this.http = http;\n  }\n  // connectToDatabase(dbname: string, user: string, password: string, host: string) \n  // {\n  //   const params = new HttpParams()\n  //     .set('dbname', dbname)\n  //     .set('user', user)\n  //     .set('password', password)\n  //     .set('host', host);\n  //   return this.http.post('http://localhost:5000/connectDB', {}, { params });\n  // }\n  connectToDatabase(dbname, user, password, host) {\n    const params = new HttpParams().set('dbname', dbname).set('user', user).set('password', password).set('host', host);\n    console.log(params);\n    return this.http.post('http://localhost:5000/connectDB', {}, {\n      params\n    });\n  }\n  // optimizeQuery(unoptimizedQuery: string) {\n  //   const params = new HttpParams().set('unoptimized_query', unoptimizedQuery);\n  //   return this.http.post('http://localhost:5000/optiQuery', {},  { params });\n  // }\n  optimizeQuery(unoptimizedQuery) {\n    const params = new HttpParams().set('unoptimized_query', unoptimizedQuery);\n    return this.http.post('http://localhost:5000/optiQuery', {}, {\n      params\n    });\n  }\n}\nSQLService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SQLService,\n  factory: SQLService.ɵfac,\n  providedIn: 'root'\n});\nSQLService.ɵfac = function SQLService_Factory(t) {\n  return new (t || SQLService)(i0.ɵɵinject(i1.HttpClient));\n};\nSQLService.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n  type: SQLService\n});\nSQLService.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({});","map":{"version":3,"mappings":"AACA,SAAqBA,UAAU,QAAQ,sBAAsB;;;AAe7D,OAAM,MAAOC,UAAU;EAErBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAgB;EAGxC;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACAC,iBAAiB,CAACC,MAAc,EAAEC,IAAY,EAAEC,QAAgB,EAAEC,IAAY;IAC5E,MAAMC,MAAM,GAAG,IAAIT,UAAU,EAAE,CAC5BU,GAAG,CAAC,QAAQ,EAAEL,MAAM,CAAC,CACrBK,GAAG,CAAC,MAAM,EAAEJ,IAAI,CAAC,CACjBI,GAAG,CAAC,UAAU,EAAEH,QAAQ,CAAC,CACzBG,GAAG,CAAC,MAAM,EAAEF,IAAI,CAAC;IAClBG,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;IAErB,OAAO,IAAI,CAACN,IAAI,CAACU,IAAI,CAAS,iCAAiC,EAAE,EAAE,EAAC;MAACJ;IAAM,CAAC,CAAC;EAC/E;EAGA;EACA;EACA;EACA;EACAK,aAAa,CAACC,gBAAwB;IACpC,MAAMN,MAAM,GAAG,IAAIT,UAAU,EAAE,CAACU,GAAG,CAAC,mBAAmB,EAAEK,gBAAgB,CAAC;IAC1E,OAAO,IAAI,CAACZ,IAAI,CAACU,IAAI,CAA2G,iCAAiC,EAAE,EAAE,EAAG;MAAEJ;IAAM,CAAE,CAAC;EACrL;;AAlCWR,UAAU;SAAVA,UAAU;EAAAe,SAAVf,UAAU;EAAAgB,YAVT;AAAM;AAUPhB,UAAU;mBAAVA,UAAU;AAAA;AAAVA,UAAU;QAAVA;AAAU;AAAVA,UAAU","names":["HttpParams","SQLService","constructor","http","connectToDatabase","dbname","user","password","host","params","set","console","log","post","optimizeQuery","unoptimizedQuery","factory","providedIn"],"sourceRoot":"","sources":["C:\\MOUADLAPTOP\\S3\\Oracle\\BHMPROJECT\\FRONTENDSQL\\src\\app\\sql.service.ts"],"sourcesContent":["import { Injectable, NgModule } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { HttpClientModule } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\n@NgModule({\n  imports: [\n    // other imports\n    // HttpClientModule,\n    \n  ],\n  // other properties\n})\nexport class SQLService {\n\n  constructor(private http: HttpClient) { }\n\n\n  // connectToDatabase(dbname: string, user: string, password: string, host: string) \n  // {\n  //   const params = new HttpParams()\n  //     .set('dbname', dbname)\n  //     .set('user', user)\n  //     .set('password', password)\n  //     .set('host', host);\n\n  //   return this.http.post('http://localhost:5000/connectDB', {}, { params });\n  // }\n  connectToDatabase(dbname: string, user: string, password: string, host: string): Observable<string> {\n    const params = new HttpParams()\n      .set('dbname', dbname)\n      .set('user', user)\n      .set('password', password)\n      .set('host', host);\n      console.log(params);\n  \n    return this.http.post<string>('http://localhost:5000/connectDB', {},{params});\n  }\n  \n\n  // optimizeQuery(unoptimizedQuery: string) {\n  //   const params = new HttpParams().set('unoptimized_query', unoptimizedQuery);\n  //   return this.http.post('http://localhost:5000/optiQuery', {},  { params });\n  // }\n  optimizeQuery(unoptimizedQuery: string) {\n    const params = new HttpParams().set('unoptimized_query', unoptimizedQuery);\n    return this.http.post<{ optimized_query: string, optimized_time: number, unoptimized_query: string, unoptimized_time: number }>('http://localhost:5000/optiQuery', {},  { params });\n  }\n  \n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}